// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/io;
import ballerina/oauth2;
import ballerinax/hubspot.crm.'import as crmImport;

// OAuth 2.0 Credentials
configurable string clientId = ?;
configurable string clientSecret = ?;
configurable string refreshToken = ?;

crmImport:OAuth2RefreshTokenGrantConfig auth = {
    clientId,
    clientSecret,
    refreshToken,
    credentialBearer: oauth2:POST_BODY_BEARER
};

// Initialize the client
final crmImport:Client importClient = check new ({auth});

public function main() returns error? {
    // Create an import request body
    string importRequestString = check io:fileReadString("resources/contact_import_request.json");

    // Loading the data file
    string filePath = "resources/contact_import_file.csv";
    byte[] bytes = check io:fileReadBytes(filePath);

    // Request body
    crmImport:body requestBody = {
        files: {
            fileContent: bytes,
            fileName: "contact_import_file.csv"
        },
        importRequest: importRequestString
    };

    // Create an import
    io:println("Creating an import...");
    crmImport:PublicImportResponse response = check importClient->/.post(payload = requestBody);
    io:println("The import is in the state : " + response.state);

    // Check if the import is successful
    if response.id is () {
        return error("The import is not successful");
    }

    int responseId = check int:fromString(response.id ?: "");
    io:println("The import id is : " + responseId.toString());

    // Fetching the status of this import
    io:println("\nFetching the status of the import " + responseId.toString() + "...");
    crmImport:PublicImportResponse|error statusResponse = importClient->/[responseId].get();
    if statusResponse is error {
        io:println("Failed to fetch the status of the import");
    } else {
        io:println("The import is in the state : " + statusResponse.state);
        io:println("The import was created at : " + statusResponse.createdAt.toString());
    }

    // Cancel the import
    io:println("\nCanceling the import " + responseId.toString() + "...");
    crmImport:ActionResponse|error cancelResponse = importClient->/[responseId]/cancel.post();

    if cancelResponse is error {
        io:println("Failed to cancel the import");
        return;
    }

    if cancelResponse.status == "COMPLETE" {
        io:println("The import was cancelled successfully");
        return;
    }

    io:println("The import cancellation is in the state : " + cancelResponse.status);
}
